{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soura\\\\pricing-app\\\\src\\\\Homepage.js\";\nimport React from 'react';\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Homepage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toppingOptions: {\n        pepperoni: {\n          icons: ['gluten free'],\n          amount: 12\n        },\n        bacon: {\n          icons: ['gluten free'],\n          amount: 13\n        },\n        ham: {\n          icons: ['gluten free'],\n          amount: 14\n        },\n        sausage: {\n          icons: ['gluten free'],\n          amount: 13\n        },\n        chicken: {\n          icons: ['gluten free'],\n          amount: 14\n        },\n        onions: {\n          icons: ['vegetarian', 'gluten free'],\n          amount: 15\n        },\n        peppers: {\n          icons: ['vegetarian', 'gluten free'],\n          amount: 15\n        },\n        mushrooms: {\n          icons: ['vegetarian', 'gluten free'],\n          amount: 22\n        },\n        pineapple: {\n          icons: ['vegetarian', 'gluten free'],\n          amount: 16\n        },\n        olives: {\n          icons: ['vegetarian', 'gluten free'],\n          amount: 19\n        },\n        jalapenos: {\n          icons: ['vegetarian', 'gluten free', 'hot'],\n          amount: 19\n        }\n      },\n      selectedToppings: [],\n      basePrice: 1000,\n      toppingPrice: 150,\n      discount: {\n        userCode: '',\n        applied: false,\n        codes: {\n          Sourav: 25,\n          Guvi: 20,\n          Independence: 30,\n          Rakhi: 10,\n          August: 15,\n          pizza: 40,\n          Sunday: 35\n        }\n      },\n      orderConfirmed: false\n    };\n    this.confirmOrderBtnRef = /*#__PURE__*/React.createRef();\n    this.closeConfirmationBtnRef = /*#__PURE__*/React.createRef();\n\n    this.handleToppingOptionClick = e => {\n      if (e.target.className === 'topping-input') {\n        const selectedTopping = e.target.id;\n        this.state.selectedToppings.includes(selectedTopping) ? this.setState(prevState => ({\n          selectedToppings: prevState.selectedToppings.filter(topping => topping !== selectedTopping)\n        })) : this.setState(prevState => ({\n          selectedToppings: [...prevState.selectedToppings, selectedTopping]\n        }));\n      }\n    };\n\n    this.handleDiscountInput = e => {\n      const value = e.target.value.trim().toLowerCase();\n      this.setState(prevState => ({\n        discount: { ...prevState.discount,\n          userCode: value\n        }\n      }));\n\n      if (this.state.discount.applied) {\n        this.setState(prevState => ({\n          discount: { ...prevState.discount,\n            applied: false\n          }\n        }));\n      }\n    };\n\n    this.handleDiscountClick = () => this.setState(prevState => ({\n      discount: { ...prevState.discount,\n        applied: true\n      }\n    }));\n\n    this.handleOrderSubmit = () => {\n      this.setState(prevState => ({\n        orderConfirmed: !prevState.orderConfirmed\n      }), () => {\n        this.state.orderConfirmed ? this.closeConfirmationBtnRef.current.focus() : this.confirmOrderBtnRef.current.focus();\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(ToppingSelect, {\n            toppingOptions: Object.entries(this.state.toppingOptions),\n            toppingPrice: (this.state.toppingPrice / 100).toFixed(2),\n            handleToppingOptionClick: this.handleToppingOptionClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Pizza, {\n            selectedToppings: this.state.selectedToppings,\n            toppingOptions: this.state.toppingOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OrderDetails, {\n            selectedToppings: this.state.selectedToppings,\n            totalPrice: ((this.state.basePrice + this.state.toppingPrice * this.state.selectedToppings.length) / 100).toFixed(2),\n            discount: this.state.discount,\n            confirmOrderBtnRef: this.confirmOrderBtnRef,\n            handleDiscountInput: this.handleDiscountInput,\n            handleDiscountClick: this.handleDiscountClick,\n            handleOrderSubmit: this.handleOrderSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), this.state.orderConfirmed ? /*#__PURE__*/_jsxDEV(OrderConfirmation, {\n            handleOrderSubmit: this.handleOrderSubmit,\n            closeConfirmationBtnRef: this.closeConfirmationBtnRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": true,\n        children: \"\\uD83C\\uDF55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), \"Custom Pizza Maker\", /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": true,\n        children: \"\\uD83C\\uDF55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Header;\n\nfunction ToppingSelect({\n  toppingOptions,\n  toppingPrice,\n  handleToppingOptionClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topping-select\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Toppings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"toppings-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(ToppingIcon, {\n          iconType: 'vegetarian'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), \" Vegetarian\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(ToppingIcon, {\n          iconType: 'gluten free'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), \" Gluten Free\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(ToppingIcon, {\n          iconType: 'hot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), \" Hot & Spicy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"toppings-info\",\n      children: [\"Toppings charged at \", `Rs${toppingPrice}`, \" each.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"topping-options\",\n      onClick: handleToppingOptionClick,\n      children: toppingOptions.map(topping => /*#__PURE__*/_jsxDEV(ToppingOption, {\n        topping: topping[0],\n        toppingIcons: topping[1].icons\n      }, topping[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ToppingSelect;\n\nfunction ToppingOption({\n  topping,\n  toppingIcons\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"topping-option\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: topping,\n      className: \"topping-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"topping-label\",\n      htmlFor: topping,\n      \"aria-label\": `${topping} (${toppingIcons.map(icon => icon)})`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topping-image\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${topping} topping-image-item`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"topping-label-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"topping-label-text\",\n          children: topping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"topping-label-icons\",\n          children: toppingIcons.map(icon => /*#__PURE__*/_jsxDEV(ToppingIcon, {\n            iconType: icon\n          }, icon, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = ToppingOption;\n\nfunction ToppingIcon({\n  iconType\n}) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `topping-icon ${iconType.split(' ')[0]}`,\n    \"aria-label\": iconType,\n    children: iconType.charAt(0).toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = ToppingIcon;\n\nfunction Pizza({\n  toppingOptions,\n  selectedToppings\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pizza-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pizza\",\n      children: selectedToppings.map(topping => /*#__PURE__*/_jsxDEV(PizzaTopping, {\n        topping: topping,\n        toppingAmount: toppingOptions[topping].amount\n      }, topping, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n\n_c5 = Pizza;\n\nfunction PizzaTopping({\n  topping,\n  toppingAmount\n}) {\n  let toppings = [];\n\n  for (let i = 1; i <= toppingAmount; i++) {\n    toppings.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `topping ${topping} ${topping}-${i} `\n    }, `${topping + i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }, this));\n  }\n\n  return toppings;\n}\n\n_c6 = PizzaTopping;\n\nfunction OrderDetails({\n  selectedToppings,\n  totalPrice,\n  discount,\n  confirmOrderBtnRef,\n  handleDiscountInput,\n  handleDiscountClick,\n  handleOrderSubmit\n}) {\n  const validDiscount = Object.keys(discount.codes).includes(discount.userCode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Order Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-toppings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Toppings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"order-toppings-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Cheese\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), selectedToppings.map(topping => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: topping\n        }, topping, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 55\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-discount\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Discount Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"discount-input\",\n        spellCheck: \"false\",\n        value: discount.userCode,\n        maxLength: \"10\",\n        onChange: handleDiscountInput,\n        \"aria-label\": \"Discount Code\",\n        \"aria-describedby\": \"discount-message\",\n        \"aria-invalid\": discount.applied && !validDiscount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), discount.applied ? validDiscount ? /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"discount-message\",\n        className: \"discount-message discount-message--valid\",\n        role: \"alert\",\n        children: [\"Valid Code: \", discount.codes[discount.userCode], \"% Off\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"discount-message\",\n        className: \"discount-message discount-message--invalid\",\n        role: \"alert\",\n        children: \"Invalid Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 29\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn discount-btn\",\n        onClick: handleDiscountClick,\n        \"aria-label\": \"Apply Discount\",\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-price\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Total Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"price\",\n        children: `Rs${discount.applied && validDiscount ? (totalPrice - totalPrice * (discount.codes[discount.userCode] / 100)).toFixed(2) : totalPrice}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn order-btn\",\n        onClick: handleOrderSubmit,\n        \"aria-label\": \"Confirm Order\",\n        ref: confirmOrderBtnRef,\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = OrderDetails;\n\nfunction OrderConfirmation({\n  closeConfirmationBtnRef,\n  handleOrderSubmit\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-confirmation\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Confirmed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your pizza will be with you shortly!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn close-btn\",\n        onClick: handleOrderSubmit,\n        \"aria-label\": \"Close Confirmation\",\n        ref: closeConfirmationBtnRef,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n}\n\n_c8 = OrderConfirmation;\nexport default Homepage; // const Homepage = ({setLoginUser}) => {\n//     return (\n//         <div className=\"homepage\">\n//             <div className=\"button\" onClick={() => setLoginUser({})} >Logout</div>\n//         </div>\n//     )\n// }\n// export default Homepage\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"ToppingSelect\");\n$RefreshReg$(_c3, \"ToppingOption\");\n$RefreshReg$(_c4, \"ToppingIcon\");\n$RefreshReg$(_c5, \"Pizza\");\n$RefreshReg$(_c6, \"PizzaTopping\");\n$RefreshReg$(_c7, \"OrderDetails\");\n$RefreshReg$(_c8, \"OrderConfirmation\");","map":{"version":3,"sources":["C:/Users/soura/pricing-app/src/Homepage.js"],"names":["React","Homepage","Component","state","toppingOptions","pepperoni","icons","amount","bacon","ham","sausage","chicken","onions","peppers","mushrooms","pineapple","olives","jalapenos","selectedToppings","basePrice","toppingPrice","discount","userCode","applied","codes","Sourav","Guvi","Independence","Rakhi","August","pizza","Sunday","orderConfirmed","confirmOrderBtnRef","createRef","closeConfirmationBtnRef","handleToppingOptionClick","e","target","className","selectedTopping","id","includes","setState","prevState","filter","topping","handleDiscountInput","value","trim","toLowerCase","handleDiscountClick","handleOrderSubmit","current","focus","render","Object","entries","toFixed","length","Header","ToppingSelect","map","ToppingOption","toppingIcons","icon","ToppingIcon","iconType","split","charAt","toUpperCase","Pizza","PizzaTopping","toppingAmount","toppings","i","push","OrderDetails","totalPrice","validDiscount","keys","OrderConfirmation"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport \"./home.css\"\r\n\r\nclass Homepage extends React.Component {\r\n\r\n    state = {\r\n        toppingOptions: {\r\n            pepperoni: {\r\n                icons: ['gluten free'],\r\n                amount: 12\r\n            },\r\n            bacon: {\r\n                icons: ['gluten free'],\r\n                amount: 13\r\n            },\r\n            ham: {\r\n                icons: ['gluten free'],\r\n                amount: 14\r\n            },\r\n            sausage: {\r\n                icons: ['gluten free'],\r\n                amount: 13\r\n            },\r\n            chicken: {\r\n                icons: ['gluten free'],\r\n                amount: 14\r\n            },\r\n            onions: {\r\n                icons: ['vegetarian', 'gluten free'],\r\n                amount: 15\r\n            },\r\n            peppers: {\r\n                icons: ['vegetarian', 'gluten free'],\r\n                amount: 15\r\n            },\r\n            mushrooms: {\r\n                icons: ['vegetarian', 'gluten free'],\r\n                amount: 22\r\n            },\r\n            pineapple: {\r\n                icons: ['vegetarian', 'gluten free'],\r\n                amount: 16\r\n            },\r\n            olives: {\r\n                icons: ['vegetarian', 'gluten free'],\r\n                amount: 19\r\n            },\r\n            jalapenos: {\r\n                icons: ['vegetarian', 'gluten free', 'hot'],\r\n                amount: 19\r\n            }\r\n        },\r\n        selectedToppings: [],\r\n        basePrice: 1000,\r\n        toppingPrice: 150,\r\n        discount: {\r\n            userCode: '',\r\n            applied: false,\r\n            codes: {\r\n                Sourav: 25,\r\n                Guvi: 20,\r\n                Independence: 30,\r\n                Rakhi: 10,\r\n                August: 15,\r\n                pizza: 40,\r\n                Sunday: 35\r\n            }\r\n        },\r\n        orderConfirmed: false\r\n    }\r\n\r\n    confirmOrderBtnRef = React.createRef();\r\n    closeConfirmationBtnRef = React.createRef();\r\n\r\n    handleToppingOptionClick = e => {\r\n        if (e.target.className === 'topping-input') {\r\n\r\n            const selectedTopping = e.target.id;\r\n\r\n            this.state.selectedToppings.includes(selectedTopping) ?\r\n                this.setState(prevState => ({ selectedToppings: prevState.selectedToppings.filter(topping => topping !== selectedTopping) })) :\r\n                this.setState(prevState => ({ selectedToppings: [...prevState.selectedToppings, selectedTopping] }));\r\n        }\r\n    }\r\n\r\n    handleDiscountInput = e => {\r\n\r\n        const value = e.target.value.trim().toLowerCase();\r\n\r\n        this.setState(prevState => ({ discount: { ...prevState.discount, userCode: value } }));\r\n        if (this.state.discount.applied) {\r\n            this.setState(prevState => ({ discount: { ...prevState.discount, applied: false } }));\r\n        }\r\n    }\r\n\r\n    handleDiscountClick = () => this.setState(prevState => ({ discount: { ...prevState.discount, applied: true } }));\r\n\r\n    handleOrderSubmit = () => {\r\n        this.setState(prevState => (\r\n            { orderConfirmed: !prevState.orderConfirmed }\r\n        ), () => {\r\n            this.state.orderConfirmed ?\r\n                this.closeConfirmationBtnRef.current.focus() :\r\n                this.confirmOrderBtnRef.current.focus();\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <main>\r\n                    <div className='container'>\r\n                        <ToppingSelect\r\n                            toppingOptions={ Object.entries(this.state.toppingOptions) }\r\n                            toppingPrice={ (this.state.toppingPrice / 100).toFixed(2) }\r\n                            handleToppingOptionClick={ this.handleToppingOptionClick } />\r\n                        <Pizza\r\n                            selectedToppings={ this.state.selectedToppings }\r\n                            toppingOptions={ this.state.toppingOptions } />\r\n                        <OrderDetails\r\n                            selectedToppings={ this.state.selectedToppings }\r\n                            totalPrice={ ((this.state.basePrice + (this.state.toppingPrice * this.state.selectedToppings.length)) / 100).toFixed(2) }\r\n                            discount={ this.state.discount }\r\n                            confirmOrderBtnRef={ this.confirmOrderBtnRef }\r\n                            handleDiscountInput={ this.handleDiscountInput }\r\n                            handleDiscountClick={ this.handleDiscountClick }\r\n                            handleOrderSubmit={ this.handleOrderSubmit }\r\n                        />\r\n                        {\r\n                            this.state.orderConfirmed ?\r\n                                <OrderConfirmation\r\n                                    handleOrderSubmit={ this.handleOrderSubmit }\r\n                                    closeConfirmationBtnRef={ this.closeConfirmationBtnRef }\r\n                                />\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1><span aria-hidden>🍕</span>Custom Pizza Maker<span aria-hidden>🍕</span></h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nfunction ToppingSelect({ toppingOptions, toppingPrice, handleToppingOptionClick }) {\r\n    return (\r\n        <div className='topping-select'>\r\n            <h2>Toppings</h2>\r\n            <ul className='toppings-info'>\r\n                <li><ToppingIcon iconType={ 'vegetarian' } /> Vegetarian</li>\r\n                <li><ToppingIcon iconType={ 'gluten free' } /> Gluten Free</li>\r\n                <li><ToppingIcon iconType={ 'hot' } /> Hot & Spicy</li>\r\n            </ul>\r\n            <p className='toppings-info'>Toppings charged at { `Rs${toppingPrice}` } each.</p>\r\n            <ul className='topping-options' onClick={ handleToppingOptionClick }>\r\n                { toppingOptions.map(topping => <ToppingOption key={ topping[0] } topping={ topping[0] } toppingIcons={ topping[1].icons } />) }\r\n            </ul>\r\n        </div >\r\n    );\r\n}\r\n\r\nfunction ToppingOption({ topping, toppingIcons }) {\r\n    return (\r\n        <li className='topping-option'>\r\n            <input type='checkbox' id={ topping } className='topping-input' />\r\n            <label className='topping-label' htmlFor={ topping } aria-label={ `${topping} (${toppingIcons.map(icon => icon)})` }>\r\n                <div className='topping-image'>\r\n                    <div className={ `${topping} topping-image-item` }></div>\r\n                </div>\r\n                <span className='topping-label-content'>\r\n                    <span className='topping-label-text'>\r\n                        { topping }\r\n                    </span>\r\n                    <span className='topping-label-icons'>\r\n                        { toppingIcons.map(icon => <ToppingIcon key={ icon } iconType={ icon } />) }\r\n                    </span>\r\n                </span>\r\n            </label>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction ToppingIcon({ iconType }) {\r\n    return (\r\n        <span className={ `topping-icon ${iconType.split(' ')[0]}` } aria-label={ iconType }>\r\n            { iconType.charAt(0).toUpperCase() }\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction Pizza({ toppingOptions, selectedToppings }) {\r\n    return (\r\n        <div className='pizza-container'>\r\n            <div className='pizza'>\r\n                { selectedToppings.map(topping =>\r\n                    <PizzaTopping key={ topping } topping={ topping } toppingAmount={ toppingOptions[topping].amount } />) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PizzaTopping({ topping, toppingAmount }) {\r\n\r\n    let toppings = [];\r\n\r\n    for (let i = 1; i <= toppingAmount; i++) {\r\n        toppings.push(<div key={ `${topping + i}` } className={ `topping ${topping} ${topping}-${i} ` } ></div>);\r\n    }\r\n\r\n    return toppings;\r\n}\r\n\r\nfunction OrderDetails({ selectedToppings, totalPrice, discount, confirmOrderBtnRef, handleDiscountInput, handleDiscountClick, handleOrderSubmit }) {\r\n\r\n    const validDiscount = Object.keys(discount.codes).includes(discount.userCode);\r\n\r\n    return (\r\n        <div className='order'>\r\n            <h2>Order Details</h2>\r\n            <div className='order-toppings'>\r\n                <h3>Toppings:</h3>\r\n                <ul className='order-toppings-list'>\r\n                    <li>Cheese</li>\r\n                    { selectedToppings.map(topping => <li key={ topping }>{ topping }</li>) }\r\n                </ul>\r\n            </div>\r\n            <div className='order-discount'>\r\n                <h3>Discount Code:</h3>\r\n                <input\r\n                    type='text'\r\n                    className='discount-input'\r\n                    spellCheck='false'\r\n                    value={ discount.userCode }\r\n                    maxLength='10'\r\n                    onChange={ handleDiscountInput }\r\n                    aria-label='Discount Code'\r\n                    aria-describedby='discount-message'\r\n                    aria-invalid={ discount.applied && !validDiscount }\r\n                />\r\n                {\r\n                    discount.applied ?\r\n                        (validDiscount ?\r\n                            <p id='discount-message' className='discount-message discount-message--valid' role='alert'>\r\n                                Valid Code: { discount.codes[discount.userCode] }% Off\r\n                            </p>\r\n                            :\r\n                            <p id='discount-message' className='discount-message discount-message--invalid' role='alert'>\r\n                                Invalid Code\r\n                            </p>)\r\n                        : null\r\n                }\r\n                <button className='btn discount-btn' onClick={ handleDiscountClick } aria-label='Apply Discount'>Apply</button>\r\n            </div>\r\n            <div className='order-price'>\r\n                <h3>Total Price:</h3>\r\n                <p className='price'>\r\n                    {\r\n                        `Rs${discount.applied && validDiscount ?\r\n                            (totalPrice - (totalPrice * (discount.codes[discount.userCode] / 100))).toFixed(2) : totalPrice}`\r\n                    }\r\n                </p>\r\n                <button\r\n                    className='btn order-btn'\r\n                    onClick={ handleOrderSubmit }\r\n                    aria-label='Confirm Order'\r\n                    ref={ confirmOrderBtnRef }\r\n                >\r\n                    Order\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction OrderConfirmation({ closeConfirmationBtnRef, handleOrderSubmit }) {\r\n    return (\r\n        <div className='order-confirmation'>\r\n            <div className='order-modal'>\r\n                <h2>Order Confirmed</h2>\r\n                <p>Your pizza will be with you shortly!</p>\r\n                <button\r\n                    className='btn close-btn'\r\n                    onClick={ handleOrderSubmit }\r\n                    aria-label=\"Close Confirmation\"\r\n                    ref={ closeConfirmationBtnRef }\r\n                >\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Homepage\r\n\r\n// const Homepage = ({setLoginUser}) => {\r\n//     return (\r\n//         <div className=\"homepage\">\r\n            \r\n//             <div className=\"button\" onClick={() => setLoginUser({})} >Logout</div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Homepage\r\n"]},"metadata":{},"sourceType":"module"}